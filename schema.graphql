type AccountDeployed @entity(immutable: true) {
  id: Bytes!
  userOpHash: Bytes! # bytes32
  sender: Bytes! # address
  factory: Bytes! # address
  paymaster: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposited @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  totalDeposit: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SignatureAggregatorChanged @entity(immutable: true) {
  id: Bytes!
  aggregator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StakeLocked @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  totalStaked: BigInt! # uint256
  unstakeDelaySec: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StakeUnlocked @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  withdrawTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StakeWithdrawn @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  withdrawAddress: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Bundle @entity {
  id: ID!
  transactionHash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  userOps: [UserOp!]! @derivedFrom(field: "bundle")
  userOpsLength: BigInt!
  network: String
}

type EVMAddress @entity {
  id: ID!
  address: Bytes
  Addresstype: AddressType
}

type Hash @entity {
  id: ID!
  hash: Bytes
  HashType: HashType
}

enum AddressType {
  WALLET
  PAYMASTER
  FACTORY
  BENEFICIARY
}

enum HashType {
  USER_OP_HASH
  TRANSACTION_HASH
}

type UserOp @entity {
  id: ID!
  transactionHash: Bytes
  bundle: Bundle! 
  userOpHash: Bytes
  sender: Bytes
  paymaster: Bytes
  nonce: BigInt
  actualGasCost: BigInt
  actualGasPrice: BigInt
  actualGasUsed: BigInt
  success: Boolean
  revertReason: Bytes
  blockTime: BigInt
  blockNumber: BigInt
  network: String
  input: Bytes
  target: Bytes
  callData: Bytes
  beneficiary: Bytes
  factory: Bytes
}

type Withdrawn @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  withdrawAddress: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
